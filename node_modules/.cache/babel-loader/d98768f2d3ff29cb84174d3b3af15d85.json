{"ast":null,"code":"import _objectSpread from \"/Users/a6002489/Desktop/Sathish/caseStudy/metroTransit/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  routes: [],\n  selectedRoute: '',\n  direction: [],\n  selectedDirection: '',\n  stop: [],\n  selectedStop: '',\n  showDirection: false,\n  showStop: false,\n  departureList: [],\n  showDepartureList: false,\n  showRouteSelection: true,\n  showStopSelection: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'ROUTE_ACTION':\n      return _objectSpread({}, state, {\n        routeData: action.payload\n      });\n\n    case 'DIRECTION_ACTION':\n      return _objectSpread({}, state, {\n        showDirection: action.payload.showDirection,\n        directionData: action.payload.direction\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/a6002489/Desktop/Sathish/caseStudy/metroTransit/src/reducers/metroReducers.js"],"names":["initialState","routes","selectedRoute","direction","selectedDirection","stop","selectedStop","showDirection","showStop","departureList","showDepartureList","showRouteSelection","showStopSelection","state","action","type","routeData","payload","directionData"],"mappings":";AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAG,EADQ;AAEfC,EAAAA,aAAa,EAAE,EAFA;AAGfC,EAAAA,SAAS,EAAE,EAHI;AAIfC,EAAAA,iBAAiB,EAAE,EAJJ;AAKfC,EAAAA,IAAI,EAAE,EALS;AAMfC,EAAAA,YAAY,EAAE,EANC;AAOfC,EAAAA,aAAa,EAAE,KAPA;AAQfC,EAAAA,QAAQ,EAAE,KARK;AASfC,EAAAA,aAAa,EAAE,EATA;AAUfC,EAAAA,iBAAiB,EAAE,KAVJ;AAWfC,EAAAA,kBAAkB,EAAE,IAXL;AAYfC,EAAAA,iBAAiB,EAAE;AAZJ,CAArB;AAcA,gBAAe,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACC,+BACMF,KADN;AAECG,QAAAA,SAAS,EAAEF,MAAM,CAACG;AAFnB;;AAIA,SAAK,kBAAL;AACA,+BACOJ,KADP;AAEGN,QAAAA,aAAa,EAAEO,MAAM,CAACG,OAAP,CAAeV,aAFjC;AAGGW,QAAAA,aAAa,EAAEJ,MAAM,CAACG,OAAP,CAAed;AAHjC;;AAKD;AACC,aAAOU,KAAP;AAbL;AAeH,CAhBD","sourcesContent":["\nconst initialState = {\n    routes : [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      showRouteSelection: true,\n      showStopSelection: false\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'ROUTE_ACTION':\n         return {\n            ...state,\n          routeData: action.payload\n         }\n         case 'DIRECTION_ACTION':\n         return {\n             ...state,\n            showDirection: action.payload.showDirection,\n            directionData: action.payload.direction\n         }\n        default:\n         return state\n    }\n}"]},"metadata":{},"sourceType":"module"}