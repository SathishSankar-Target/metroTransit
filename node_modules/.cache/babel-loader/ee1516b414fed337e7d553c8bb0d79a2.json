{"ast":null,"code":"var _jsxFileName = \"/Users/a6002489/Desktop/Sathish/caseStudy/metroTransit/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { fetchApi } from './apiCalls';\nimport DepartureList from './departureList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRoutChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDirection: false,\n        direction: [],\n        selectedRoute: '',\n        showStop: false,\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select route') {\n        fetchApi('directions/' + value).then(direction => this.setState({\n          direction: direction,\n          showDirection: true,\n          selectedRoute: value\n        }));\n      }\n    };\n\n    this.handleDirectionChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showStop: false,\n        stop: [],\n        selectedDirection: '',\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select direction') {\n        fetchApi('stops/' + this.state.selectedRoute + '/' + value).then(direction => this.setState({\n          stop: direction,\n          showStop: true,\n          selectedDirection: value\n        }));\n      }\n    };\n\n    this.handleStopChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n      });\n\n      if (value !== 'Select stop') {\n        fetchApi(this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true,\n          selectedStop: value\n        }));\n      }\n    };\n\n    this.updateDepartureData = this.updateDepartureData.bind(this);\n    this.state = {\n      routes: [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    };\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({\n      routes: routes\n    }));\n    setInterval(this.updateDepartureData, 60000);\n  } // Makes the call every 1 min only when there is selectedRoute, selectedDirection, selectedStop\n\n\n  async updateDepartureData() {\n    if (this.state.selectedRoute !== '' && this.state.selectedDirection !== '' && this.state.selectedStop !== '') {\n      const query = this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + this.state.selectedStop;\n      fetchApi(query).then(departureList => this.setState({\n        departureList: departureList\n      }));\n    }\n  } // Makes the call to get the direction select box data and set/change some default state values\n\n\n  render() {\n    const state = this.state;\n    const routeData = state.routes;\n    const directionData = state.direction;\n    const stopData = state.stop;\n    const departureList = state.departureList; // const { routeData, directionData, stopData, departureList } = state\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Real-time Departures\"), React.createElement(\"div\", {\n      className: \"select-box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, routeData.length ? React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleRoutChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Select route\"), routeData.map(route => React.createElement(\"option\", {\n      key: route.RouteId,\n      value: route.RouteId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, route.Description))) : routeData.errors && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"We are unable to get the desired route option for you to select, Kindly try again after some time\"), state.showDirection && directionData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleDirectionChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Select direction\"), directionData.map(direction => React.createElement(\"option\", {\n      key: direction.DirectionId,\n      value: direction.DirectionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, direction.DirectionName))), state.showStop && stopData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleStopChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Select stop\"), stopData.map(stop => React.createElement(\"option\", {\n      key: stop.PlaceCode,\n      value: stop.PlaceCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, stop.Description)))), state.showDepartureList && React.createElement(DepartureList, {\n      departureList: departureList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a6002489/Desktop/Sathish/caseStudy/metroTransit/src/App.js"],"names":["React","Component","fetchApi","DepartureList","App","constructor","props","handleRoutChange","event","value","target","setState","showDirection","direction","selectedRoute","showStop","departureList","showDepartureList","then","handleDirectionChange","stop","selectedDirection","state","handleStopChange","selectedStop","updateDepartureData","bind","routes","showRouteSelection","showStopSelection","componentDidMount","setInterval","query","render","routeData","directionData","stopData","length","e","map","route","RouteId","Description","errors","DirectionId","DirectionName","PlaceCode"],"mappings":"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","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport {fetchApi} from './apiCalls'\nimport DepartureList from './departureList'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.updateDepartureData = this.updateDepartureData.bind(this)\n    this.state = {\n      routes : [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    }\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({routes :routes }))\n    setInterval(this.updateDepartureData, 60000)\n  }\n  // Makes the call every 1 min only when there is selectedRoute, selectedDirection, selectedStop\n  async updateDepartureData() {\n    if(this.state.selectedRoute !== '' && this.state.selectedDirection !== '' && this.state.selectedStop !== '') {\n      const query = this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+this.state.selectedStop\n      fetchApi(query).then(departureList => this.setState({departureList: departureList}))\n    }\n  }\n\n  // Makes the call to get the direction select box data and set/change some default state values\n  handleRoutChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDirection: false,\n      direction: [],\n      selectedRoute:'',\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select route') {\n      fetchApi('directions/'+value)\n      .then(direction => this.setState({direction :direction, showDirection: true, selectedRoute: value }))\n    } \n  }\n\n  // Makes the call to get the stop select box data and set/change some default state values\n  handleDirectionChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showStop: false,\n      stop: [],\n      selectedDirection: '',\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select direction') {\n      fetchApi('stops/'+this.state.selectedRoute+'/'+value)\n      .then(direction => this.setState({stop :direction, showStop: true, selectedDirection: value }))\n    } \n  }\n\n  // Makes the call to get the list departure data and set/change some default state values\n  handleStopChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDepartureList: false,\n      departureList: []\n    })\n    if (value !== 'Select stop') {\n      fetchApi(this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+value)\n      .then(departureList => this.setState({departureList: departureList, showDepartureList: true, selectedStop: value}))\n    } \n  }\n\n  render() {\n    const state = this.state\n    const routeData = state.routes \n    const directionData = state.direction\n    const stopData = state.stop\n    const departureList = state.departureList\n    // const { routeData, directionData, stopData, departureList } = state\n    return (\n      <div className=\"App\">\n        <h2 className=\"page-title\">Real-time Departures</h2>\n        <div className=\"select-box-container\">\n        {/* Select the route select box */}\n        { routeData.length ? \n          <select className=\"select-box\" onChange={(e) => this.handleRoutChange(e)}>\n            <option>Select route</option>\n            { routeData.map(route => <option key={route.RouteId} value={route.RouteId}>{route.Description}</option>)}\n          </select> :\n          (routeData.errors && <div>We are unable to get the desired route option for you to select, Kindly try again after some time</div>) }\n        {/* Select the direction select box */}\n        { (state.showDirection && directionData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleDirectionChange(e)}>\n            <option>Select direction</option>\n            { directionData.map(direction => <option key={direction.DirectionId} value={direction.DirectionId}>{direction.DirectionName}</option>)}\n          </select>\n        }\n        {/* Select the stop select box */}\n        { (state.showStop && stopData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleStopChange(e)}>\n            <option>Select stop</option>\n            { stopData.map(stop => <option key={stop.PlaceCode} value={stop.PlaceCode}>{stop.Description}</option>)}\n          </select>\n        }\n        </div>\n        {/* Departure list along with the stop description and stop id */}\n        { state.showDepartureList && <DepartureList departureList = {departureList} /> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}