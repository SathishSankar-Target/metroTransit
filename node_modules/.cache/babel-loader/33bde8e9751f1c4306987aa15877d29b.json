{"ast":null,"code":"var _jsxFileName = \"/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { fetchApi } from './apiCalls';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRoutChange = event => {\n      let value = event.target.value;\n\n      if (value !== 'Select route') {\n        fetchApi('directions/' + value).then(direction => this.setState({\n          direction: direction,\n          showDirection: true,\n          selectedRoute: value\n        }));\n      } else {\n        this.setState({\n          showDirection: false,\n          direction: [],\n          selectedRoute: ''\n        });\n      }\n    };\n\n    this.handleDirectionChange = event => {\n      let value = event.target.value;\n      console.log('value', value);\n\n      if (value !== 'Select direction') {\n        fetchApi('stops/' + this.state.selectedRoute + '/' + value).then(direction => this.setState({\n          stop: direction,\n          showStop: true,\n          selectedDirection: value\n        }));\n      } else {\n        this.setState({\n          showStop: false,\n          stop: [],\n          selectedDirection: ''\n        });\n      }\n    };\n\n    this.handleStopChange = event => {\n      let value = event.target.value;\n      console.log('value', value);\n\n      if (value !== 'Select stop') {\n        fetchApi(this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true\n        }));\n      } else {\n        this.setState({\n          showDepartureList: false,\n          departureList: []\n        });\n      }\n    };\n\n    this.state = {\n      routes: [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false\n    };\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({\n      routes: routes\n    }));\n  }\n\n  render() {\n    const state = this.state;\n    const routeData = state.routes;\n    const directionData = state.direction;\n    const stopDate = state.stop;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleRoutChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Select route\"), routeData.map(route => React.createElement(\"option\", {\n      key: route.RouteId,\n      value: route.RouteId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, route.Description))), state.showDirection && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleDirectionChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Select direction\"), directionData.map(direction => React.createElement(\"option\", {\n      key: direction.DirectionId,\n      value: direction.DirectionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, direction.DirectionName))), state.showStop && React.createElement(\"select\", {\n      className: \"select-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Select stop\"), stopDate.map(stop => React.createElement(\"option\", {\n      key: stop.PlaceCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, stop.Description))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js"],"names":["React","Component","fetchApi","App","constructor","props","handleRoutChange","event","value","target","then","direction","setState","showDirection","selectedRoute","handleDirectionChange","console","log","state","stop","showStop","selectedDirection","handleStopChange","departureList","showDepartureList","routes","selectedStop","componentDidMount","render","routeData","directionData","stopDate","e","map","route","RouteId","Description","DirectionId","DirectionName","PlaceCode"],"mappings":"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","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport {fetchApi} from './apiCalls'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      routes : [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n    }\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({routes :routes }))\n  }\n\n  handleRoutChange = (event) => {\n    let value = event.target.value;\n    if (value !== 'Select route') {\n      fetchApi('directions/'+value).then(direction => this.setState({direction :direction, showDirection: true, selectedRoute: value }))\n    } else {\n      this.setState({\n        showDirection: false,\n        direction: [],\n        selectedRoute:''\n    });\n    }\n  }\n\n  handleDirectionChange = (event) => {\n    let value = event.target.value;\n    console.log('value', value)\n    if (value !== 'Select direction') {\n      fetchApi('stops/'+this.state.selectedRoute+'/'+value).then(direction => this.setState({stop :direction, showStop: true, selectedDirection: value }))\n    } else {\n      this.setState({\n        showStop: false,\n        stop: [],\n        selectedDirection: ''\n    });\n    }\n  }\n\n  handleStopChange = (event) => {\n    let value = event.target.value;\n    console.log('value', value)\n    if (value !== 'Select stop') {\n      fetchApi(this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+value).then(departureList => this.setState({departureList :departureList, showDepartureList: true }))\n    } else {\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n    });\n    }\n  }\n\n  render() {\n    const state = this.state\n    const routeData = state.routes\n    const directionData = state.direction\n    const stopDate = state.stop\n    return (\n      <div className=\"App\">\n        <select className=\"select-box\" onChange={(e) => this.handleRoutChange(e)}>\n          <option>Select route</option>\n          { routeData.map(route => <option key={route.RouteId} value={route.RouteId}>{route.Description}</option>)}\n        </select>\n        { state.showDirection &&\n          <select className=\"select-box\" onChange={(e) => this.handleDirectionChange(e)}>\n            <option>Select direction</option>\n            { directionData.map(direction => <option key={direction.DirectionId} value={direction.DirectionId}>{direction.DirectionName}</option>)}\n          </select>\n        }\n        { state.showStop &&\n          <select className=\"select-box\">\n            <option>Select stop</option>\n            { stopDate.map(stop => <option key={stop.PlaceCode}>{stop.Description}</option>)}\n          </select>\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}