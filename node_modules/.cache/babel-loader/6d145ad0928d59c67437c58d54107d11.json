{"ast":null,"code":"var _jsxFileName = \"/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { fetchApi } from './apiCalls';\nimport { number } from 'prop-types';\nimport DepatureList from './depatureList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRoutChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDirection: false,\n        direction: [],\n        selectedRoute: '',\n        showStop: false,\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select route') {\n        fetchApi('directions/' + value).then(direction => this.setState({\n          direction: direction,\n          showDirection: true,\n          selectedRoute: value\n        }));\n      }\n    };\n\n    this.handleDirectionChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showStop: false,\n        stop: [],\n        selectedDirection: '',\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select direction') {\n        fetchApi('stops/' + this.state.selectedRoute + '/' + value).then(direction => this.setState({\n          stop: direction,\n          showStop: true,\n          selectedDirection: value\n        }));\n      }\n    };\n\n    this.handleStopChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n      });\n\n      if (value !== 'Select stop') {\n        fetchApi(this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true,\n          selectedStop: value\n        }));\n      }\n    };\n\n    this.handleStopEntry = event => {\n      let value = event.target.value;\n\n      if (typeof value === number) {\n        fetchApi(value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true\n        }));\n      } else {\n        this.setState({\n          showDepartureList: false,\n          departureList: []\n        });\n      }\n    };\n\n    this.showMoreDepature = () => {\n      if (this.state.departureCountToShow === 3) {\n        this.setState({\n          departureCountToShow: this.state.departureList.Departures.length,\n          depatureExpanded: true\n        });\n      } else {\n        this.setState({\n          departureCountToShow: 3,\n          depatureExpanded: false\n        });\n      }\n    };\n\n    this.onSelectRouteAndStop = selected => {\n      if (selected === 'route') {\n        this.setState({\n          showRouteSelection: true,\n          showStopSelection: false\n        });\n      } else if (selected === 'stop') {\n        this.setState({\n          showRouteSelection: false,\n          showStopSelection: true\n        });\n      }\n    };\n\n    this.updateDepatureData = this.updateDepatureData.bind(this);\n    this.state = {\n      routes: [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      departureCountToShow: 3,\n      depatureExpanded: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    };\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({\n      routes: routes\n    }));\n    setInterval(this.updateDepatureData, 60000);\n  } // Makes the call every 1 min only when there is selectedRoute, selectedDirection, selectedStop\n\n\n  async updateDepatureData() {\n    if (this.state.selectedRoute !== '' && this.state.selectedDirection !== '' && this.state.selectedStop !== '') {\n      const query = this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + this.state.selectedStop;\n      fetchApi(query).then(departureList => this.setState({\n        departureList: departureList\n      }));\n    }\n  } // Makes the call to get the direction select box data and set/change some default state values\n\n\n  render() {\n    const state = this.state;\n    const routeData = state.routes;\n    const directionData = state.direction;\n    const stopData = state.stop;\n    const departureList = state.departureList; // const { routeData, directionData, stopData, departureList } = state\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Real-time Departures\"), React.createElement(\"button\", {\n      className: \"button-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"By route\"), React.createElement(\"button\", {\n      className: \"button-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"By stop #\"), React.createElement(\"div\", {\n      className: \"select-box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, routeData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleRoutChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Select route\"), routeData.map(route => React.createElement(\"option\", {\n      key: route.RouteId,\n      value: route.RouteId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, route.Description))), state.showDirection && directionData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleDirectionChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Select direction\"), directionData.map(direction => React.createElement(\"option\", {\n      key: direction.DirectionId,\n      value: direction.DirectionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, direction.DirectionName))), state.showStop && stopData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleStopChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Select stop\"), stopData.map(stop => React.createElement(\"option\", {\n      key: stop.PlaceCode,\n      value: stop.PlaceCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, stop.Description)))), state.showDepartureList && React.createElement(DepatureList, {\n      departureList: departureList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js"],"names":["React","Component","fetchApi","number","DepatureList","App","constructor","props","handleRoutChange","event","value","target","setState","showDirection","direction","selectedRoute","showStop","departureList","showDepartureList","then","handleDirectionChange","stop","selectedDirection","state","handleStopChange","selectedStop","handleStopEntry","showMoreDepature","departureCountToShow","Departures","length","depatureExpanded","onSelectRouteAndStop","selected","showRouteSelection","showStopSelection","updateDepatureData","bind","routes","componentDidMount","setInterval","query","render","routeData","directionData","stopData","e","map","route","RouteId","Description","DirectionId","DirectionName","PlaceCode"],"mappings":"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","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport {fetchApi} from './apiCalls'\nimport { number } from 'prop-types';\nimport DepatureList from './depatureList'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.updateDepatureData = this.updateDepatureData.bind(this)\n    this.state = {\n      routes : [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      departureCountToShow: 3,\n      depatureExpanded: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    }\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({routes :routes }))\n    setInterval(this.updateDepatureData, 60000)\n  }\n  // Makes the call every 1 min only when there is selectedRoute, selectedDirection, selectedStop\n  async updateDepatureData() {\n    if(this.state.selectedRoute !== '' && this.state.selectedDirection !== '' && this.state.selectedStop !== '') {\n      const query = this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+this.state.selectedStop\n      fetchApi(query).then(departureList => this.setState({departureList: departureList}))\n    }\n  }\n\n  // Makes the call to get the direction select box data and set/change some default state values\n  handleRoutChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDirection: false,\n      direction: [],\n      selectedRoute:'',\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select route') {\n      fetchApi('directions/'+value)\n      .then(direction => this.setState({direction :direction, showDirection: true, selectedRoute: value }))\n    } \n  }\n\n  // Makes the call to get the stop select box data and set/change some default state values\n  handleDirectionChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showStop: false,\n      stop: [],\n      selectedDirection: '',\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select direction') {\n      fetchApi('stops/'+this.state.selectedRoute+'/'+value)\n      .then(direction => this.setState({stop :direction, showStop: true, selectedDirection: value }))\n    } \n  }\n\n  // Makes the call to get the list depature data and set/change some default state values\n  handleStopChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDepartureList: false,\n      departureList: []\n    })\n    if (value !== 'Select stop') {\n      fetchApi(this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+value)\n      .then(departureList => this.setState({departureList: departureList, showDepartureList: true, selectedStop: value}))\n    } \n  }\n\n  handleStopEntry = (event) => {\n    let value = event.target.value;\n    if (typeof value === number) {\n      fetchApi(value)\n      .then(departureList => this.setState({departureList: departureList, showDepartureList: true }))\n    } else {\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n      })\n    }\n  }\n  // onClick method to expand/colapse to show more/less depature list when the list length is more than 3\n  showMoreDepature = () => {\n    if(this.state.departureCountToShow === 3 ){\n      this.setState({ departureCountToShow: this.state.departureList.Departures.length, depatureExpanded: true })\n    } else {\n      this.setState({ departureCountToShow: 3, depatureExpanded: false })\n    }\n  }\n\n  onSelectRouteAndStop = (selected) => {\n    if(selected === 'route' ){\n      this.setState({ showRouteSelection: true, showStopSelection: false })\n    } else if(selected === 'stop' ) {\n      this.setState({ showRouteSelection: false, showStopSelection: true })\n    }\n  }\n\n  render() {\n    const state = this.state\n    const routeData = state.routes\n    const directionData = state.direction\n    const stopData = state.stop\n    const departureList = state.departureList\n    // const { routeData, directionData, stopData, departureList } = state\n    return (\n      <div className=\"App\">\n        <h2 className=\"page-title\">Real-time Departures</h2>\n        <button className=\"button-main\">By route</button>\n        <button className=\"button-main\">By stop #</button>\n        <div className=\"select-box-container\">\n        {/* Select the route select box */}\n        { routeData && \n          <select className=\"select-box\" onChange={(e) => this.handleRoutChange(e)}>\n            <option>Select route</option>\n            { routeData.map(route => <option key={route.RouteId} value={route.RouteId}>{route.Description}</option>)}\n          </select> }\n        {/* Select the direction select box */}\n        { (state.showDirection && directionData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleDirectionChange(e)}>\n            <option>Select direction</option>\n            { directionData.map(direction => <option key={direction.DirectionId} value={direction.DirectionId}>{direction.DirectionName}</option>)}\n          </select>\n        }\n        {/* Select the stop select box */}\n        { (state.showStop && stopData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleStopChange(e)}>\n            <option>Select stop</option>\n            { stopData.map(stop => <option key={stop.PlaceCode} value={stop.PlaceCode}>{stop.Description}</option>)}\n          </select>\n        }\n        </div>\n        {/* Depature list along with the stop description and stop id */}\n        { state.showDepartureList && \n            <DepatureList departureList = {departureList} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}