{"ast":null,"code":"var _jsxFileName = \"/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { fetchApi } from './apiCalls';\nimport { number } from 'prop-types';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDepatureData = () => {\n      if (this.setState.selectedRoute !== '' && this.setState.selectedDirection !== '' && this.setState.selectedStop !== '') {\n        const query = this.setState.selectedRoute + '/' + this.setState.selectedDirection + '/' + this.setState.selectedStop;\n        setTimeout(() => fetchApi(query).then(departureList => this.setState({\n          departureList: departureList\n        })), 1000);\n      }\n    };\n\n    this.handleRoutChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDirection: false,\n        direction: [],\n        selectedRoute: '',\n        showStop: false,\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select route') {\n        fetchApi('directions/' + value).then(direction => this.setState({\n          direction: direction,\n          showDirection: true,\n          selectedRoute: value\n        }));\n      }\n    };\n\n    this.handleDirectionChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showStop: false,\n        stop: [],\n        selectedDirection: '',\n        departureList: [],\n        showDepartureList: false\n      });\n\n      if (value !== 'Select direction') {\n        fetchApi('stops/' + this.state.selectedRoute + '/' + value).then(direction => this.setState({\n          stop: direction,\n          showStop: true,\n          selectedDirection: value\n        }));\n      }\n    };\n\n    this.handleStopChange = event => {\n      let value = event.target.value;\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n      });\n\n      if (value !== 'Select stop') {\n        fetchApi(this.state.selectedRoute + '/' + this.state.selectedDirection + '/' + value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true,\n          selectedStop: value\n        }));\n      }\n    };\n\n    this.handleStopEntry = event => {\n      let value = event.target.value;\n\n      if (typeof value === number) {\n        fetchApi(value).then(departureList => this.setState({\n          departureList: departureList,\n          showDepartureList: true\n        }));\n      } else {\n        this.setState({\n          showDepartureList: false,\n          departureList: []\n        });\n      }\n    };\n\n    this.showMoreDepature = () => {\n      if (this.state.departureCountToShow === 3) {\n        this.setState({\n          departureCountToShow: this.state.departureList.Departures.length,\n          depatureExpanded: true\n        });\n      } else {\n        this.setState({\n          departureCountToShow: 3,\n          depatureExpanded: false\n        });\n      }\n    };\n\n    this.onSelectRouteAndStop = selected => {\n      if (selected === 'route') {\n        this.setState({\n          showRouteSelection: true,\n          showStopSelection: false\n        });\n      } else if (selected === 'stop') {\n        this.setState({\n          showRouteSelection: false,\n          showStopSelection: true\n        });\n      }\n    };\n\n    this.state = {\n      routes: [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      departureCountToShow: 3,\n      depatureExpanded: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    };\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({\n      routes: routes\n    }));\n  }\n\n  render() {\n    const state = this.state;\n    const routeData = state.routes;\n    const directionData = state.direction;\n    const stopData = state.stop;\n    const departureList = state.departureList; // const { routeData, directionData, stopData, departureList } = state\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Real-time Departures\"), React.createElement(\"button\", {\n      className: \"button-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"By route\"), React.createElement(\"button\", {\n      className: \"button-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"By stop #\"), React.createElement(\"div\", {\n      className: \"select-box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, routeData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleRoutChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Select route\"), routeData.map(route => React.createElement(\"option\", {\n      key: route.RouteId,\n      value: route.RouteId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, route.Description))), state.showDirection && directionData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleDirectionChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Select direction\"), directionData.map(direction => React.createElement(\"option\", {\n      key: direction.DirectionId,\n      value: direction.DirectionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, direction.DirectionName))), state.showStop && stopData && React.createElement(\"select\", {\n      className: \"select-box\",\n      onChange: e => this.handleStopChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Select stop\"), stopData.map(stop => React.createElement(\"option\", {\n      key: stop.PlaceCode,\n      value: stop.PlaceCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, stop.Description)))), state.showDepartureList && React.createElement(\"div\", {\n      className: \"depature-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, departureList.Stop !== undefined ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"depature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"depature-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Departures\"), React.createElement(\"div\", {\n      className: \"stop-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, departureList.Stop.Description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Stop \", departureList.Stop.StopId))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, departureList.Departures.slice(0, state.departureCountToShow).map(depature => {\n      return React.createElement(\"div\", {\n        className: \"depature-list\",\n        key: depature.BlockNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"route-discription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"route-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, depature.RouteId)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, depature.Description)), React.createElement(\"div\", {\n        className: \"depart-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, depature.DepartureText)));\n    })), departureList.Departures.length > 3 && React.createElement(\"button\", {\n      className: \"show-more-button\",\n      onClick: this.showMoreDepature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: state.depatureExpanded ? 'expand' : 'colapsed',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), \"Show \", state.depatureExpanded ? 'less' : 'more', \" depature time\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"We are unable to get the desired direction for your select, Kindly try chaning the option for the route, direction and stop\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a6002489/Desktop/Sathish/ReactRD/MetroTransit/metrotransit/src/App.js"],"names":["React","Component","fetchApi","number","App","constructor","props","updateDepatureData","setState","selectedRoute","selectedDirection","selectedStop","query","setTimeout","then","departureList","handleRoutChange","event","value","target","showDirection","direction","showStop","showDepartureList","handleDirectionChange","stop","state","handleStopChange","handleStopEntry","showMoreDepature","departureCountToShow","Departures","length","depatureExpanded","onSelectRouteAndStop","selected","showRouteSelection","showStopSelection","routes","componentDidMount","render","routeData","directionData","stopData","e","map","route","RouteId","Description","DirectionId","DirectionName","PlaceCode","Stop","undefined","StopId","slice","depature","BlockNumber","DepartureText"],"mappings":"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","sourcesContent":["import React , { Component }from 'react';\nimport './App.css';\nimport {fetchApi} from './apiCalls'\nimport { number } from 'prop-types';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      routes : [],\n      selectedRoute: '',\n      direction: [],\n      selectedDirection: '',\n      stop: [],\n      selectedStop: '',\n      showDirection: false,\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n      departureCountToShow: 3,\n      depatureExpanded: false,\n      showRouteSelection: true,\n      showStopSelection: false\n    }\n  }\n\n  componentDidMount() {\n    fetchApi('routes').then(routes => this.setState({routes :routes }))\n    \n  }\n\n  updateDepatureData = () => {\n    if(this.setState.selectedRoute !== '' && this.setState.selectedDirection !== '' && this.setState.selectedStop !== '') {\n      const query = this.setState.selectedRoute+'/'+this.setState.selectedDirection+'/'+this.setState.selectedStop\n      setTimeout(() => \n        fetchApi(query).then(departureList => this.setState({departureList: departureList})), 1000\n      )\n    }\n  }\n\n  handleRoutChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDirection: false,\n      direction: [],\n      selectedRoute:'',\n      showStop: false,\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select route') {\n      fetchApi('directions/'+value)\n      .then(direction => this.setState({direction :direction, showDirection: true, selectedRoute: value }))\n    } \n  }\n\n  handleDirectionChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showStop: false,\n      stop: [],\n      selectedDirection: '',\n      departureList: [],\n      showDepartureList: false,\n    })\n    if (value !== 'Select direction') {\n      fetchApi('stops/'+this.state.selectedRoute+'/'+value)\n      .then(direction => this.setState({stop :direction, showStop: true, selectedDirection: value }))\n    } \n  }\n\n  handleStopChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      showDepartureList: false,\n      departureList: []\n    })\n    if (value !== 'Select stop') {\n      fetchApi(this.state.selectedRoute+'/'+this.state.selectedDirection+'/'+value)\n      .then(departureList => this.setState({departureList: departureList, showDepartureList: true, selectedStop: value}))\n    } \n  }\n\n  handleStopEntry = (event) => {\n    let value = event.target.value;\n    if (typeof value === number) {\n      fetchApi(value)\n      .then(departureList => this.setState({departureList: departureList, showDepartureList: true }))\n    } else {\n      this.setState({\n        showDepartureList: false,\n        departureList: []\n      })\n    }\n  }\n\n  showMoreDepature = () => {\n    if(this.state.departureCountToShow === 3 ){\n      this.setState({ departureCountToShow: this.state.departureList.Departures.length, depatureExpanded: true })\n    } else {\n      this.setState({ departureCountToShow: 3, depatureExpanded: false })\n    }\n  }\n\n  onSelectRouteAndStop = (selected) => {\n    if(selected === 'route' ){\n      this.setState({ showRouteSelection: true, showStopSelection: false })\n    } else if(selected === 'stop' ) {\n      this.setState({ showRouteSelection: false, showStopSelection: true })\n    }\n  }\n\n  render() {\n    const state = this.state\n    const routeData = state.routes\n    const directionData = state.direction\n    const stopData = state.stop\n    const departureList = state.departureList\n    // const { routeData, directionData, stopData, departureList } = state\n    return (\n      <div className=\"App\">\n        <h2 class=\"page-title\">Real-time Departures</h2>\n        <button className=\"button-main\">By route</button>\n        <button className=\"button-main\">By stop #</button>\n        <div className=\"select-box-container\">\n        { routeData && \n          <select className=\"select-box\" onChange={(e) => this.handleRoutChange(e)}>\n            <option>Select route</option>\n            { routeData.map(route => <option key={route.RouteId} value={route.RouteId}>{route.Description}</option>)}\n          </select> }\n        { (state.showDirection && directionData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleDirectionChange(e)}>\n            <option>Select direction</option>\n            { directionData.map(direction => <option key={direction.DirectionId} value={direction.DirectionId}>{direction.DirectionName}</option>)}\n          </select>\n        }\n        { (state.showStop && stopData) &&\n          <select className=\"select-box\" onChange={(e) => this.handleStopChange(e)}>\n            <option>Select stop</option>\n            { stopData.map(stop => <option key={stop.PlaceCode} value={stop.PlaceCode}>{stop.Description}</option>)}\n          </select>\n        }\n        </div>\n        { state.showDepartureList && \n          <div className=\"depature-container\">\n            { departureList.Stop !== undefined ?\n              <div>\n                <div className=\"depature\">\n                    <h2 className=\"depature-title\">Departures</h2>\n                    <div className=\"stop-description\">\n                      <div>{departureList.Stop.Description}</div>\n                      <div>Stop {departureList.Stop.StopId}</div>\n                    </div>\n                </div>\n                <div>\n                  {departureList.Departures.slice(0, state.departureCountToShow).map(depature => {\n                    return <div className=\"depature-list\" key={depature.BlockNumber}>\n                      <div className=\"route-discription\">\n                        <span className=\"route-id\"><strong>{depature.RouteId}</strong></span>\n                        <span>{depature.Description}</span>\n                      </div>\n                      <div className=\"depart-time\"><strong>{depature.DepartureText}</strong></div>\n                      </div>\n                  })}\n                </div>\n                { departureList.Departures.length > 3 && \n                  <button className=\"show-more-button\" onClick={this.showMoreDepature}>\n                    <span className={state.depatureExpanded ? 'expand': 'colapsed'}></span>\n                    Show {state.depatureExpanded ? 'less' : 'more' } depature time\n                  </button>\n                }\n              </div>\n              :\n              <div>We are unable to get the desired direction for your select, Kindly try chaning the option for the route, direction and stop</div>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}